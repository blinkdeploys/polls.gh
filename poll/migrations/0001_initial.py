# Generated by Django 3.2.18 on 2023-02-19 07:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('geo', '0001_initial'),
        ('people', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Position name')),
                ('details', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(choices=[(0, 'Unassigned'), (1, 'Constituency'), (2, 'Station'), (3, 'Region'), (4, 'National')], help_text='Geographic level of the position')),
                ('zone', models.IntegerField(help_text='Zone ID based on the position level')),
            ],
            options={
                'db_table': 'poll_position',
                'unique_together': {('level', 'zone')},
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_votes', models.IntegerField(help_text='Total number of votes', verbose_name='Total number of votes')),
                ('result_sheet_url', models.FilePathField()),
                ('constituency_agent', models.ForeignKey(help_text='Constituency agent that recorded', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('party', models.ForeignKey(help_text='Party', on_delete=django.db.models.deletion.CASCADE, to='people.party')),
                ('position', models.ForeignKey(help_text='Position', on_delete=django.db.models.deletion.CASCADE, to='poll.position')),
                ('station', models.ForeignKey(help_text='Polling Station', on_delete=django.db.models.deletion.CASCADE, to='geo.station')),
            ],
            options={
                'db_table': 'poll_result',
            },
        ),
        migrations.CreateModel(
            name='ResultApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=35)),
                ('approved_at', models.DateTimeField(auto_now_add=True, verbose_name='Approved At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('approving_agent', models.ForeignKey(help_text='Agent that approved the result', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('result', models.ForeignKey(help_text='Position', on_delete=django.db.models.deletion.CASCADE, to='poll.result')),
            ],
            options={
                'db_table': 'poll_result_approval',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Election name')),
                ('details', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(choices=[(0, 'Unassigned'), (1, 'Constituency'), (2, 'Station'), (3, 'Region'), (4, 'National')], default=0, help_text='Election level')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=35)),
                ('start', models.DateTimeField(help_text='Election start date', verbose_name='Starts On')),
                ('end', models.DateTimeField(help_text='Election end date', verbose_name='Ends On')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('position', models.OneToOneField(help_text='Position', on_delete=django.db.models.deletion.CASCADE, to='poll.position')),
            ],
            options={
                'db_table': 'poll_event',
            },
        ),
    ]
